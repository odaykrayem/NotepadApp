package com.mrmindteam.notepadapp.activities;


import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import androidx.core.content.ContextCompat;
import androidx.core.content.FileProvider;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.mrmindteam.notepadapp.BuildConfig;
import com.mrmindteam.notepadapp.R;
import com.mrmindteam.notepadapp.entities.Note;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;

public class Main extends Activity {

    private static String FILE;
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    Button shareBtn;

    Note shareNote;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        shareNote = (Note) getIntent().getSerializableExtra("share");

        FILE = this.getFilesDir() + File.separator + shareNote.getDateTime() + ".pdf";

        shareBtn = findViewById(R.id.share_btn);
        shareBtn.setEnabled(false);

        shareBtn.setOnClickListener(v -> {
            Intent shareIntent = new Intent(Intent.ACTION_SEND);
            shareIntent.putExtra(Intent.EXTRA_STREAM,  uriFromFile(this, new File(FILE).getAbsoluteFile()));
            shareIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
            shareIntent.setType("application/pdf");
            startActivity(Intent.createChooser(shareIntent, "share note.."));
        });

        try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            addMetaData(document);
            addTitlePage(document);
            //createImage();
            document.close();
            Toast.makeText(this, shareNote.getDateTime() + ".pdf is ready to share!", Toast.LENGTH_SHORT).show();
            shareBtn.setEnabled(true);



        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    Uri uriFromFile(Context context, File file)
    {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)
        {
            return FileProvider.getUriForFile(context, BuildConfig.APPLICATION_ID + ".provider", file);
        }
        else
        {
            return Uri.fromFile(file);
        }
    }

    private void addMetaData(Document document) {
        document.addTitle(shareNote.getTitle());
        document.addKeywords("content, image, note");
        document.addAuthor("" + System.getProperty("user.name"));
        document.addCreator("" + System.getProperty("user.name"));
    }

    private void addTitlePage(Document document)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        preface.add(new Paragraph(
                "Note generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));

        addEmptyLine(preface, 1);


        preface.add(new Paragraph(shareNote.getTitle(), catFont));
        addEmptyLine(preface, 1);

        preface.add(new Paragraph(
                shareNote.getSubtitle(),
                smallBold));
        addEmptyLine(preface, 2);

        addEmptyLine(preface, 2);


        preface.add(new Paragraph(
                shareNote.getNoteText(),
                smallBold));

        addEmptyLine(preface, 2);

        document.add(preface);

        document.newPage();

        if(shareNote .getImagePath() != null){
            try {
                Image image = Image.getInstance (shareNote.getImagePath());
                float scaler = ((document.getPageSize().getWidth() - document.leftMargin()
                        - document.rightMargin() - 0) / image.getWidth()) * 100;

                image.scalePercent(scaler);
                document.add(image);
            } catch (IOException e) {
                e.printStackTrace();
            }

        }

    }






    private void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }

}